rm(list=ls())
library(BMABMDR)
library(gamlss)
## available models?
get_models('continuous')
get_models('quantal')
dose = c(0,6.25,12.5,25,50,100)
mean = c(10.87143,10.16669,10.81050,10.41179,12.38305,18.47681)
sd = c(1.804554,1.805939,3.858265,1.626007,2.045695,2.322449)
n = rep(10,6)
summ.data = data.frame(x = dose, y = mean, s = sd, n = n)
plot(summ.data$x, summ.data$y, type = 'l')
# prior model weights
prior.weights = c(rep(1,8), rep(1,8))
# bmr
q = 0.1
pvec = c(0.05,0.5,0.95)
# uninformative
data_N = PREP_DATA_N(summ.data,
sumstats = T,
q = q)
data_LN = PREP_DATA_LN(summ.data,
sumstats = T,
q = q)
SBMD = sampling_MA(data_N, data_LN,
prior.weights,
ndraws=ndr, nrchains=nrch,
nriterations=nriter, warmup=wu, delta=dl,
treedepth=trd, seed=sd, pvec=pvec,
plot=F)
rm(list=ls())
# install package from zip file
install.packages("~/GitHub/BMABMDR_0.0.0.9013.tar.gz", repos = NULL, type = "source")
library(BMABMDR)
library(gamlss)
## available models?
get_models('continuous')
get_models('quantal')
dose = c(0,6.25,12.5,25,50,100)
mean = c(10.87143,10.16669,10.81050,10.41179,12.38305,18.47681)
sd = c(1.804554,1.805939,3.858265,1.626007,2.045695,2.322449)
n = rep(10,6)
summ.data = data.frame(x = dose, y = mean, s = sd, n = n)
plot(summ.data$x, summ.data$y, type = 'l')
## Bartlett test
# normal distribution
b.Normal <- bartlett(summ.data$s, summ.data$n)
b.Normal
# lognormal distribution
# first convert arithmetic to geometric summary stats
summ.data.LN <- data.frame(x = dose,
y = log(NtoLN(summ.data$y, summ.data$s)[1:length(dose)]),
s = log(NtoLN(summ.data$y, summ.data$s)[(length(dose)+1):(2*length(dose))]),
n = n
)
b.Lognormal <- bartlett(summ.data.LN$s, summ.data.LN$n)
b.Lognormal
## Prep data for analysis
pval = .05
if(b.Normal[2] >= pval & b.Lognormal[2] >= pval){
# If assumption met for both distributions
data_N = PREP_DATA_N(summ.data,
sumstats = T,
q = q, prior.d = 'N11', extended = F)
data_LN = PREP_DATA_LN(summ.data,
sumstats = T,
q = q, prior.d = 'N11', extended = F)
}else if(b.Normal[2] >= pval & b.Normal[2] < pval){
## If assumption met for Normal only
# Default analyses with Normal only
data_N = PREP_DATA_N(summ.data,
sumstats = T,
q = q, prior.d = 'N11', extended = F)
data_LN = PREP_DATA_LN(summ.data,
sumstats = T,
q = q, prior.d = 'N11', extended = F)
prior.weights <- c(rep(1,8), rep(0,8)) # set weights to 0 for Lognormal
## Data for sensitivity analysis
summ.data.LN.sens1 <- summ.data.LN
summ.data.LN.sens1$s <- min(summ.data.LN.sens1$s)
summ.data.LN.sens2 <- summ.data.LN
summ.data.LN.sens2$s <- max(summ.data.LN.sens2$s)
data_LN_sens1 <- PREP_DATA_LN(summ.data.LN.sens1,
sumstats = T,
geom.stats = T, # specify that geometric summary stats are given as input
q = q, prior.d = 'N11', extended = F)
data_LN_sens2 <- PREP_DATA_LN(summ.data.LN.sens2,
sumstats = T,
geom.stats = T, # specify that geometric summary stats are given as input
q = q, prior.d = 'N11', extended = F)
}else if(b.Normal[2] >= pval & b.Normal[2] < pval){
## If assumption met for Lognormal only
# Default analyses with Lognormal only
data_N = PREP_DATA_N(summ.data,
sumstats = T,
q = q, prior.d = 'N11', extended = F)
data_LN = PREP_DATA_LN(summ.data,
sumstats = T,
q = q, prior.d = 'N11', extended = F)
prior.weights <- c(rep(0,8), rep(1,8)) # set weights to 0 for Normal
## Data for sensitivity analyses
summ.data.N.sens1 <- summ.data
summ.data.N.sens1$s <- min(summ.data$s)
summ.data.N.sens2 <- summ.data
summ.data.N.sens2$s <- max(summ.data$s)
data_N_sens1 = PREP_DATA_N(summ.data.N.sens1,
sumstats = T,
q = q, prior.d = 'N11', extended = F)
data_N_sens2 = PREP_DATA_N(summ.data.N.sens2,
sumstats = T,
q = q, prior.d = 'N11', extended = F)
}else if(b.Normal[2] < pval & b.Normal[2] < pval){
## If assumption met for none
# Analysis with smallest SD
summ.data.N.sens1 <- summ.data
summ.data.N.sens1$s <- min(summ.data$s)
data_N_sens1 = PREP_DATA_N(summ.data.N.sens1,
sumstats = T,
q = q, prior.d = 'N11', extended = F)
summ.data.LN.sens1 <- summ.data.LN
summ.data.LN.sens1$s <- min(summ.data.LN.sens1$s)
data_LN_sens1 <- PREP_DATA_LN(summ.data.LN.sens1,
sumstats = T,
geom.stats = T, # specify that geometric summary stats are given as input
q = q, prior.d = 'N11', extended = F)
# Analysis with largest SD
summ.data.N.sens2 <- summ.data.N
summ.data.N.sens2$s <- max(summ.data.N.sens2$s)
data_N_sens2 <- PREP_DATA_LN(summ.data.N.sens2,
sumstats = T,
q = q, prior.d = 'N11', extended = F)
summ.data.LN.sens2 <- summ.data.LN
summ.data.LN.sens2$s <- max(summ.data.LN.sens2$s)
data_LN_sens2 <- PREP_DATA_LN(summ.data.LN.sens2,
sumstats = T,
geom.stats = T, # specify that geometric summary stats are given as input
q = q, prior.d = 'N11', extended = F)
}
b.Normal
if(b.Normal[2] >= pval & b.Lognormal[2] >= pval){
# If assumption met for both distributions
data_N = PREP_DATA_N(summ.data,
sumstats = T,
q = q, prior.d = 'N11', extended = F)
data_LN = PREP_DATA_LN(summ.data,
sumstats = T,
q = q, prior.d = 'N11', extended = F)
}else if(b.Normal[2] >= pval & b.Normal[2] < pval){
## If assumption met for Normal only
# Default analyses with Normal only
data_N = PREP_DATA_N(summ.data,
sumstats = T,
q = q, prior.d = 'N11', extended = F)
data_LN = PREP_DATA_LN(summ.data,
sumstats = T,
q = q, prior.d = 'N11', extended = F)
prior.weights <- c(rep(1,8), rep(0,8)) # set weights to 0 for Lognormal
## Data for sensitivity analysis
summ.data.LN.sens1 <- summ.data.LN
summ.data.LN.sens1$s <- min(summ.data.LN.sens1$s)
summ.data.LN.sens2 <- summ.data.LN
summ.data.LN.sens2$s <- max(summ.data.LN.sens2$s)
data_LN_sens1 <- PREP_DATA_LN(summ.data.LN.sens1,
sumstats = T,
geom.stats = T, # specify that geometric summary stats are given as input
q = q, prior.d = 'N11', extended = F)
data_LN_sens2 <- PREP_DATA_LN(summ.data.LN.sens2,
sumstats = T,
geom.stats = T, # specify that geometric summary stats are given as input
q = q, prior.d = 'N11', extended = F)
}else if(b.Normal[2] >= pval & b.Normal[2] < pval){
## If assumption met for Lognormal only
# Default analyses with Lognormal only
data_N = PREP_DATA_N(summ.data,
sumstats = T,
q = q, prior.d = 'N11', extended = F)
data_LN = PREP_DATA_LN(summ.data,
sumstats = T,
q = q, prior.d = 'N11', extended = F)
prior.weights <- c(rep(0,8), rep(1,8)) # set weights to 0 for Normal
## Data for sensitivity analyses
summ.data.N.sens1 <- summ.data
summ.data.N.sens1$s <- min(summ.data$s)
summ.data.N.sens2 <- summ.data
summ.data.N.sens2$s <- max(summ.data$s)
data_N_sens1 = PREP_DATA_N(summ.data.N.sens1,
sumstats = T,
q = q, prior.d = 'N11', extended = F)
data_N_sens2 = PREP_DATA_N(summ.data.N.sens2,
sumstats = T,
q = q, prior.d = 'N11', extended = F)
}else if(b.Normal[2] < pval & b.Lognormal[2] < pval){
## If assumption met for none
# Analysis with smallest SD
summ.data.N.sens1 <- summ.data
summ.data.N.sens1$s <- min(summ.data$s)
data_N_sens1 = PREP_DATA_N(summ.data.N.sens1,
sumstats = T,
q = q, prior.d = 'N11', extended = F)
summ.data.LN.sens1 <- summ.data.LN
summ.data.LN.sens1$s <- min(summ.data.LN.sens1$s)
data_LN_sens1 <- PREP_DATA_LN(summ.data.LN.sens1,
sumstats = T,
geom.stats = T, # specify that geometric summary stats are given as input
q = q, prior.d = 'N11', extended = F)
# Analysis with largest SD
summ.data.N.sens2 <- summ.data.N
summ.data.N.sens2$s <- max(summ.data.N.sens2$s)
data_N_sens2 <- PREP_DATA_LN(summ.data.N.sens2,
sumstats = T,
q = q, prior.d = 'N11', extended = F)
summ.data.LN.sens2 <- summ.data.LN
summ.data.LN.sens2$s <- max(summ.data.LN.sens2$s)
data_LN_sens2 <- PREP_DATA_LN(summ.data.LN.sens2,
sumstats = T,
geom.stats = T, # specify that geometric summary stats are given as input
q = q, prior.d = 'N11', extended = F)
}
b.Lognormal
b.Normal
