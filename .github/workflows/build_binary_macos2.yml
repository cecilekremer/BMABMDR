name: build-binary-macos-workflow

on:
  workflow_call:
  inputs:
  rver:
  description: 'R-version used to execute job'
required: true
type: string
default: 'release'
build_source:
  description: 'Build/upload source version of R-package'
required: true
type: boolean
default: false
build_binary:
  description: 'Build/upload binary version of R-package'
required: true
type: boolean
default: true

jobs:
  check-upload:
  runs-on: macos-latest
name: macos-latest (R-${{ inputs.rver }})
env:
  R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
R_VER: ${{ inputs.rver }}
steps:
  - uses: actions/checkout@v2
- uses: r-lib/actions/setup-r@v2
with:
  r-version: ${{ inputs.rver }}
use-public-rspm: true
extra-repositories: 'https://mc-stan.org/r-packages/'
- name: install BMABMDR dependencies
uses: r-lib/actions/setup-r-dependencies@v2
with:
  extra-packages: |
  pkgbuild
remotes
- name: set compiler flags
run: |
  # ... (your existing steps)
  shell: Rscript {0}
- name: Make 'configure' script executable
run: chmod +x configure  # Assuming 'configure' is in the root of your package directory
- name: build source R-package
id: build-source
run: |
  ## build source pkg
  pkg <- pkgbuild::build()
cat("name=", basename(pkg), "\n", "path=", file.path(pkg), "\n", file = Sys.getenv("GITHUB_OUTPUT"), sep = "", append = TRUE)
if(Sys.getenv("BUILD_SOURCE") == "true") {
  dir.create("pkg_source")
  file.copy(from = pkg, to = file.path("pkg_source", basename(pkg)))
}
shell: Rscript {0}
env:
  BUILD_SOURCE: ${{ inputs.build_source }}
- name: make artifact folder
run: mkdir ${{ inputs.rver }}
- name: upload source R-package
if: inputs.build_source
uses: actions/upload-artifact@v3
with:
  name: src
path: pkg_source
if-no-files-found: ignore
- name: build binary R-package
id: build-binary
if: inputs.build_binary
run: pkgbuild::build(binary = TRUE, dest_path = Sys.getenv("R_VER"))
shell: Rscript {0}
- name: upload binary R-package
if: success() && inputs.build_binary
uses: actions/upload-artifact@v3
with:
  name: ${{ inputs.rver }}
path: ${{ inputs.rver }}
if-no-files-found: error
