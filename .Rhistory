pkgbuild::compile_dll()
install.packages("devtools")
install.packages("pkgbuild")
pkgbuild::compile_dll()
Sys.getenv("BINPREF")
roxygen2::roxygenize()
install.packages("rcmdcheck")
pkgbuild::compile_dll()
writeLines(strsplit(Sys.getenv("PATH"), ";")[[1]])
writeLines(strsplit(Sys.getenv("PATH"), ";")[[1]])
pkgbuild::compile_dll()
.Last.error.trace
devtools::install()
pkgbuild::compile_dll()
.Last.error.trace
?example
example(soruce)
example(source)
roxygen2::roxygenize()
roxygen2::roxygenize(load_code = sourceDir)
roxygen2::roxygenize(load_code = sourceDir)
pkgbuild::compile_dll()
library(rstan)
?rstan_create_packge
library(rstantools)
?rstan_create_package
pkgbuild::compile_dll()
pkgbuild::compile_dll()
example(source)
roxygen2::roxygenize()
Sys.getenv("PATH")
Sys.getenv("PATH")
roxygen2::roxygenize()
writeLines('PATH="${RTOOLS40_HOME}\\usr\\bin;${PATH}"',
con = "~/.Renviron")
Sys.which("make")
pkgbuild::compile_dll()
devtools::install_github(“stan-dev/rstantools”, ref = " c3c59fb")
devtools::install_github(“stan-dev/rstantools”, ref = " c3c59fb")
library(rstantools)
?rstan_create_package
Sys.getenv("BINPREF")
Sys.getenv("BINPREF")
Sys.setenv("BINPREF" = C:/Rtools/mingw_64/bin/)
cat('Sys.setenv(BINPREF = "C:/Rtools/mingw_$(WIN)/bin/")',
file = file.path(Sys.getenv("HOME"), ".Rprofile"),
sep = "\n", append = TRUE)
Sys.getenv("BINPREF")
Sys.setenv(BINPREF = "C:/Rtools/mingw_$(WIN)/bin/")
Sys.getenv("BINPREF")
Sys.setenv(BINPREF = "C:/Rtools/mingw_64/bin/")
Sys.getenv("BINPREF")
Sys.setenv(BINPREF = "C:/rtools40/mingw_64/bin/")
Sys.getenv("BINPREF")
Sys.setenv(BINPREF = "C:/rtools40/mingw64/bin/")
Sys.getenv("BINPREF")
Sys.getenv()
Sys.getenv("PATH")
example(source)
try(roxygen2::roxygenize(load_code = sourceDir), silent = TRUE)
try(roxygen2::roxygenize(load_code = sourceDir), silent = TRUE)
pkgbuild::compile_dll()
install.packages(c("matrixStats", "R.utils", "remotes", "rlang", "roxygen2", "V8"))
try(roxygen2::roxygenize(load_code = sourceDir), silent = TRUE)
pkgbuild::compile_dll()
.Last.error.trace
remotes::install_github("bgoodri/inline")
pkgbuild::compile_dll()
library(inline)
install.packages("inline")
pkgbuild::compile_dll()
devtools::check()
library(rstan)
example(stan_model,package="rstan",run.dontrun=T)
example(source)
try(roxygen2::roxygenize(load_code = sourceDir), silent = TRUE)
pkgbuild::compile_dll()
sessionInfo()
library(Rccp)
library(Rcpp)
Rcpp::compilerCheck
Rcpp::compilerCheck()
detach("package:Rcpp", unload = TRUE)
sessionInfo()
library(BH)
sessionInfo()
example(source)
try(roxygen2::roxygenize(load_code = sourceDir), silent = TRUE)
pkgbuild::compile_dll()
pkgbuild::compile_dll()
pkgbuild::compile_dll()
remove.packages("StanHeaders")
file.remove(".RData")
install.packages("StanHeaders")
example(source)
try(roxygen2::roxygenize(load_code = sourceDir), silent = TRUE)
pkgbuild::compile_dll()
Sys.getenv(PAT)
Sys.getenv("PATH")
Sys.getenv("BINPREF")
Sys.setenv(BINPREF = "C:/Rtools/mingw64/bin/")
Sys.setenv(BINPREF = "C:/rtools40/mingw64/bin/")
Sys.getenv("BINPREF")
pkgbuild::compile_dll()
sessionInfo()
example(stan_model, package = "rstan", run.dontrun = TRUE)
install.packages("StanHeaders")
sessionInfo()
library(rstan)
install.packages("rstan")
sessionInfo()
library(rstan)
sessionInfo()
example(source)
try(roxygen2::roxygenize(load_code = sourceDir), silent = TRUE)
pkgbuild::compile_dll()
## Compile package and generate the documentation
example(source)
try(roxygen2::roxygenize(load_code = sourceDir), silent = TRUE)
pkgbuild::compile_dll()
Sys.getenv("BINPREF")
Sys.setenv(BINPREF = "C:/rtools40/mingw64/bin/")
Sys.getenv("BINPREF")
## Compile package and generate the documentation
example(source)
try(roxygen2::roxygenize(load_code = sourceDir), silent = TRUE)
pkgbuild::compile_dll()
Sys.getenv("BINPREF")
# Sys.getenv("BINPREF") # should be "C:/rtools40/mingw64/bin/"
Sys.setenv(BINPREF = "C:/rtools40/mingw64/bin/")
## Compile package and generate the documentation
example(source)
try(roxygen2::roxygenize(load_code = sourceDir), silent = TRUE)
pkgbuild::compile_dll()
roxygen2::roxygenize()
library(BMABMDR)
install.packages("~/GitHub/BMABMDR_0.0.0.9000.tar.gz", repos = NULL, type = "source")
devtools::load_all()
roxygen2::roxygenize()
Sys.getenv("BINPREF")
setwd("~/GitHub/")
Sys.getenv("BINPREF")
# Sys.getenv("BINPREF") # should be "C:/rtools40/mingw64/bin/"
Sys.setenv(BINPREF = "C:/rtools40/mingw64/bin/")
install.packages("~/GitHub/BMABMDR_0.0.0.9000.tar.gz", repos = NULL, type = "source")
install.packages("~/GitHub/BMABMDR_0.0.0.9000.tar.gz", repos = NULL, type = "source")
Sys.getenv("BINPREF")
?install.packages
Sys.getenv("PATH")
old_path <- Sys.getenv("PATH")
new_path <- paste("C:/rtools40/mingw64/bin/;C:/rtools40/mingw32/bin/", old_path, sep=";")
new_path
Sys.setenv(PATH = new_path)
Sys.getenv("PATH")
install.packages("~/GitHub/BMABMDR_0.0.0.9000.tar.gz", repos = NULL, type = "source")
Sys.getenv("PATH")
Sys.getenv("BINPREF")
Sys.setenv(PATH = old_path)
Sys.getenv("PATH")
Sys.getenv("BINPREF")
Sys.getenv(PATHµ)
Sys.getenv(PATH)
Sys.getenv("PATH")
install.packages("~/GitHub/BMABMDR_0.0.0.9000.tar.gz", repos = NULL, type = "source")
old_path <- Sys.getenv("PATH")
old_path
old_path <- gsub("C:\\rtools40\\usr\\bin;", "", old_path)
old_path
old_path <- gsub("C:\\rtools40\\usr\\bin;", "", old_path, fixed = T)
old_path
new_path <- paste("C:/Rtools/usr/bin", old_path, sep=";")
new_path
Sys.setenv(PATH = new_path)
install.packages("~/GitHub/BMABMDR_0.0.0.9000.tar.gz", repos = NULL, type = "source")
install.packages("~/GitHub/BMABMDR_0.0.0.9000.tar.gz", repos = NULL, type = "source")
library(BMABMDR)
?fun.alpha
?PREP_DATA_LN
rm(list=ls())
library(BMABMDR)
example(source)
try(roxygen2::roxygenize(load_code = sourceDir), silent = TRUE)
pkgbuild::compile_dll()
library(BMADR)
library(BMABMDR)
?devtools::install
devtools::install
devtools::install()
getwd()
library(readr)
immunotoxicityData <- read_table2("C:/Users/lucp9544/Desktop/immunotoxicityData.txt")
View(immunotoxicityData)
?usethis::use_data
usethis::use_data(immunotoxicityData, name = 'immunotoxicityData')
?use_data_raw
usethis::use_data_raw(name = 'immunotoxicityData')
usethis::use_data(immunotoxicityData, overwrite = TRUE)
rm(list = ls())
load("C:/Users/lucp9544/Desktop/PhD/EFSA Project/BMABMDR/data/immunotoxicityData.rda")
head(immunotoxicityData)
1.34-2*0.36
1.34+2*0.36
10^-0.6
library(BMABMDR)
dim(immunotoxicityData)
names(immunotoxicityData)
install.packages("cli")
install.packages("cli")
install.packages("cli")
install.packages("cli")
install.packages("cli")
install.packages("cli")
remove.packages("cli", lib="~/R/win-library/4.0")
install.packages("cli")
install.packages("cli")
install.packages("cli")
library(BMABMDR)
?PREP_DATA_N
remove.packages("BMABMDR", lib="~/R/win-library/4.0")
library(BMABMDR)
?immunotoxicityData
?PREP_DATA_N
?PREP_DATA_N
detach(BMABMDR)
library(BMABMDR)
detach("package:BMABMDR", unload = TRUE)
library(readr)
LearningMemory <- read_table2("C:/Users/lucp9544/Desktop/LearningMemory.txt")
View(LearningMemory)
usethis::use_data(LearningMemory, overwrite = TRUE)
colnames(LearningMemory)
(3*2.5)/100
16000/(3*2.5)
160/(3*2.5)
160*(3*2.5)
46360/100
463.6*(3*3.5)
463.6*(3*3.5)/54
188*365
(94*2)+5000
(94*2*220)+5000
